<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use yii\helpers\ArrayHelper;
use yii\behaviors\TimestampBehavior;
use \app\models\ProductQuery;

/**
 * This is the base-model class for table "product".
 *
 * @property integer $id
 * @property integer $category_id
 * @property integer $brand_id
 * @property string $product_name
 * @property string $slug
 * @property string $description
 * @property double $price
 * @property double $discount
 * @property integer $stock
 * @property integer $quantity
 * @property integer $sold_count
 * @property integer $status
 * @property string $created_at
 * @property string $updated_at
 */
abstract class Product extends \yii\db\ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'product';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['timestamp'] = [
            'class' => TimestampBehavior::class,
            'value' => (new \DateTime())->format('Y-m-d H:i:s'),
                        ];
        
    return $behaviors;
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        $parentRules = parent::rules();
        return ArrayHelper::merge($parentRules, [
            [['category_id', 'brand_id', 'product_name', 'slug', 'description', 'price', 'discount', 'stock', 'quantity', 'sold_count', 'status'], 'default', 'value' => null],
            [['category_id', 'brand_id', 'stock', 'quantity', 'sold_count', 'status'], 'integer'],
            [['price', 'discount'], 'number'],
            [['product_name', 'slug', 'description'], 'string', 'max' => 255]
        ]);
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return ArrayHelper::merge(parent::attributeLabels(), [
            'id' => 'ID',
            'category_id' => 'Category ID',
            'brand_id' => 'Brand ID',
            'product_name' => 'Product Name',
            'slug' => 'Slug',
            'description' => 'Description',
            'price' => 'Price',
            'discount' => 'Discount',
            'stock' => 'Stock',
            'quantity' => 'Quantity',
            'sold_count' => 'Sold Count',
            'status' => 'Status',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ]);
    }

    /**
     * @inheritdoc
     * @return ProductQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new ProductQuery(static::class);
    }
}
